pipeline {
    agent any

    environment {
        REGISTRY_URL = "localhost:5000"
        IMAGE_NAME = "my-app"
        REGISTRY_CREDENTIALS_ID = "registry-credentials" // ID delle credenziali di Jenkins
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    def buildNumber = currentBuild.number
                    def imageTag = "${env.REGISTRY_URL}/${env.IMAGE_NAME}:${buildNumber}"

                    docker.build(imageTag)

                    env.IMAGE_TAG = imageTag
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: env.REGISTRY_CREDENTIALS_ID, usernameVariable: 'REGISTRY_USER', passwordVariable: 'REGISTRY_PASS')]) {
                        docker.withRegistry("http://${env.REGISTRY_URL}", env.REGISTRY_CREDENTIALS_ID) {
                            def dockerImage = docker.image(env.IMAGE_TAG)
                            dockerImage.push()
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo "Build and push completed successfully: ${env.IMAGE_TAG}"
        }
        failure {
            echo "Build or push failed. Check logs for details."
        }
    }
}
